{"version":3,"sources":["components/Header.js","components/About.js","components/Contact.js","components/Footer.js","components/Slides.js","components/Home.js","components/Profile.js","components/Signup.js","components/Signin.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","About","Component","Contact","Footer","items","src","altText","caption","Slides","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","onExiting","onExited","key","alt","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Home","Jumbotron","Button","Profile","Signup","Signin","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8dd1340.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport{\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand tag ={Link} to=\"/\">oxbe</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/about\">เกี่ยวกับเรา</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/contact\">ติดต่อเรา</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/profile\">ข้อมูลส่วนตัว</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            \r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/signup\">สมัครสมาชิก</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to=\"/signin\">เข้าสู่ระบบ</NavLink>\r\n            </NavItem>\r\n            </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>เกี่ยวกับเรา</h1>\r\n                xxxxxxxxxxxxxxxxxxxx\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>ติดต่อเรา</h1>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>ส่วนท้าย</h1>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\n\r\nconst items = [\r\n  {\r\n    src: '/images/pic1.jpg',\r\n    altText: 'Slide 1',\r\n    caption: 'Slide 1'\r\n  },\r\n  {\r\n    src: 'images/pic2.jpg',\r\n    altText: 'Slide 2',\r\n    caption: 'Slide 2'\r\n  },\r\n  {\r\n    src: 'images/pic3.jpg',\r\n    altText: 'Slide 3',\r\n    caption: 'Slide 3'\r\n  }\r\n];\r\n\r\nconst Slides = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} alt={item.altText} />\r\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel\r\n      activeIndex={activeIndex}\r\n      next={next}\r\n      previous={previous}\r\n    >\r\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n      {slides}\r\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default Slides;","import React, { Component } from 'react'\r\nimport {Jumbotron, Button } from 'reactstrap';\r\nimport Slides from './Slides';\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Slides/>\r\n                <Jumbotron>\r\n        <h1 className=\"display-3\">Hello, world!</h1>\r\n        <p className=\"lead\">This is a simple hero unit, a simple Jumbotron-style component for calling extra attention to featured content or information.</p>\r\n        <hr className=\"my-2\" />\r\n        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\r\n        <p className=\"lead\">\r\n          <Button color=\"primary\">Learn More</Button>\r\n        </p>\r\n      </Jumbotron>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>ข้อมูลส่วนตัว</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Signup extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>สมัครสมาชิก</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Signin extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>เข้าสู่ระบบ</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport Footer from './components/Footer';\r\nimport Home from './components/Home';\r\nimport Profile from './components/Profile';\r\nimport Signup from './components/Signup';\r\nimport Signin from './components/Signin';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header/>\r\n        <div className=\"container\">\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/contact\" component={Contact} />    \r\n        <Route path=\"/profile\" component={Profile} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/signin\" component={Signin} />\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}